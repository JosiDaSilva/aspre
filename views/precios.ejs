<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Nuestros Precios</title>
    <link rel="stylesheet" href="/css/precios.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script> <!-- Incluye jQuery -->
</head>
<body>
    <div class="container">
        <header>
            <div class="logo-container">
                <a href="/inicio"> <!-- Enlace que redirige a la p√°gina inicio.ejs -->
                    <img src="/images/logo.png" alt="Logo de la Empresa" class="logo">
                </a>
            </div>
            <h1>Lista de Precios</h1>
            <p>Consulta nuestros precios y art√≠culos disponibles.</p>
            <div class="toggle-view">
                <button id="toggleViewBtn" class="toggle-btn">
                    <img src="/images/grilla.png" alt="Receptor de Luz" class="icon-image">
                </button>
            </div>
        </header>
        
        <!-- √çcono de carrito, con enlace a la p√°gina carritos.ejs -->
        <div>
            <span id="carrito-icon" class="carrito-icon" title="Ver carrito">üõí</span>
        </div>

        <!-- Cuadro de b√∫squeda -->
        <div class="search-container">
            <input type="text" id="searchInput" placeholder="Buscar por c√≥digo o nombre...">
            <button onclick="buscarArticulos()">Buscar</button>
        </div>

        <div class="grid" id="articulosGrid">
            <% if (articulos && articulos.length > 0) { %>
                <% articulos.forEach(function(articulo) { %>
                    <div class="item" data-codbar="<%= articulo.codbar %>" data-denom="<%= articulo.denom.toLowerCase() %>">
                        <img class="product-image" src="/images/<%= articulo.codbar.replace(/\s+/g, '-') %>.jpg" alt="<%= articulo.denom %>" onerror="this.onerror=null; this.src='/images/logo.png';">
                        <p>Codigo de barra: <strong><%= articulo.codbar %></strong></p>
                        <h2 class="product-name"><%= articulo.denom %></h2>
                        <p class="precio">Precio: <span>$<%= articulo.precio.toFixed(2) %></span></p>
                        <p>Stock Misiones: <strong><%= articulo.stock %></strong></p>
                        <p>Stock Corrientes: <strong><%= articulo.stkcor %></strong></p>
                        <input type="number" id="cantidad-<%= articulo.codbar %>" class="quantity-input" placeholder="Cantidad" min="1">
                        <div class="button-group">
                            <button class="add-button" onclick="agregarAlCarrito('<%= articulo.codbar %>', 'Misiones')">Agregar al carrito Misiones</button>
                            <button class="add-button" onclick="agregarAlCarrito('<%= articulo.codbar %>', 'Corrientes')">Agregar al carrito Corrientes</button>
                            <button class="equivalence-button" data-codbar="<%= articulo.codbar %>">Ver Equivalencia</button>
                        </div>
                    </div>
                <% }); %>
            <% } else { %>
                <p>No se encontraron art√≠culos.</p>
            <% } %>
        </div>

        <!-- Navegaci√≥n de paginaci√≥n -->
        <nav>
            <% if (page > 1) { %>
                <a href="/precios?page=<%= page - 1 %>">Anterior</a>
            <% } %>
            <a href="/precios?page=<%= page + 1 %>">Siguiente</a>
        </nav>
    </div>
   <!-- Modal para mostrar el carrito -->
    <div id="carrito-modal" class="modal">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Carrito de Compras</h2>
             <div class="container">
                <div id="misiones" class="column">
                    <h3>Misiones</h3>
                </div>
               <div id="corrientes" class="column">
                    <h3>Corrientes</h3>
                </div>
            </div>
            <button id="enviar-pedido">Enviar Pedido</button>
        </div>
    </div> 
    <!-- Modal para mostrar equivalencias -->
    <div id="equivalencias-modal" class="modal">
        <div class="modal-content">
            <span class="close-equivalencias">&times;</span>
            <h2>Equivalencias</h2>
            <div id="equivalencias-items">
                <!-- Las equivalencias se cargar√°n aqu√≠ -->
            </div>
        </div>
    </div>
    <script>

document.getElementById('toggleViewBtn').addEventListener('click', function() {
                const gridView = document.querySelector('.grid-view');
                const listView = document.querySelector('.list-view');
                const button = this;

                // Cambiar entre las clases para las dos vistas
                if (gridView.style.display !== 'none') {
                    // Cambiar a vista estilo Excel (tabla)
                    gridView.style.display = 'none';
                    listView.style.display = 'table';
                    // Cambiar la imagen y el texto alternativo
                    icon.src = '/images/grilla.png';
                    icon.alt = 'Vista Excel';
                } else {
                    // Cambiar a vista estilo Cuadr√≠cula
                    gridView.style.display = 'grid';
                    listView.style.display = 'none';
                    // Cambiar la imagen y el texto alternativo
                    icon.src = '/images/cuadricula.png';
                    icon.alt = 'Vista Grilla';
                }
            });

    
              $(document).ready(function() {
    // Abrir el modal del carrito
    $("#carrito-icon").click(function() {
        $.get("/carrito", function(data) {
            renderItems(data); 
        });
    });

    function renderItems(items) {
        const misionesContainer = $("#misiones");
        const corrientesContainer = $("#corrientes");

        // Limpiar contenido actual y agregar encabezado
        misionesContainer.html('<h3>Misiones</h3>');
        corrientesContainer.html('<h3>Corrientes</h3>');

        items.forEach(item => {
            const itemDiv = $(`
                <div class="carrito-details">
                    <p>${item.codbar}</p>
                    <p>${item.descripcion}</p>
                    <input type="number" class="cantidad-input" value="${item.cantidad}" min="1" data-codbar="${item.codbar}">
                    <p class="precio">Precio: $${item.precio.toFixed(2)}</p>
                    <p>Total: <span class="item-total">$${(item.precio * item.cantidad).toFixed(2)}</span></p>
                    <p>Articulo para Zona: ${item.zona}</p>
                    <button class="actualizar-btn" data-codbar="${item.codbar}">Actualizar</button>
                    <button class="eliminar-btn" data-codbar="${item.codbar}">‚úñ</button>
                </div>
            `);

            // A√±adir el art√≠culo a la zona correspondiente
            if (item.zona === 1) {
                misionesContainer.append(itemDiv);
            } else if (item.zona === 2) {
                corrientesContainer.append(itemDiv);
            }
        });

        // Calcular y mostrar los totales iniciales
        actualizarTotal();

        $("#carrito-modal").show();
    }

    // Cerrar el modal del carrito
    $(".close").click(function() {
        $("#carrito-modal").hide();
    });

    // Cerrar el modal si se hace clic fuera de √©l
    $(window).click(function(event) {
        if (event.target == document.getElementById('carrito-modal')) {
            $("#carrito-modal").hide();
        }
    });

    // Manejar el env√≠o del pedido
    $("#enviar-pedido").click(function() {
        const sucursal = prompt("¬øA qu√© sucursal deseas enviar el pedido? (escriba 1 para Misiones o 2 para Corrientes)");

        if (sucursal === null) return;

        let zona;
        if (sucursal === '1') zona = 1;
        else if (sucursal === '2') zona = 2;
        else {
            alert("Sucursal no v√°lida. Por favor, elige 'Misiones' o 'Corrientes'.");
            return;
        }

        const transporte = prompt("Por favor, escribe el transporte:");
        const obs = prompt("Por favor, escribe una observaci√≥n (opcional):");

        $.post("/enviar-pedido", { transporte: transporte, obs: obs, zona: zona })
            .done(function(response) {
                alert(response.message);
                $("#carrito-modal").hide();
            })
            .fail(function() {
                alert("Hubo un problema al enviar el pedido.");
            });
    });

    // Actualizar la cantidad
    $(document).on('click', '.actualizar-btn', function() {
        const codbar = $(this).data('codbar');
        const nuevaCantidad = $(this).siblings('.cantidad-input').val();

        $.post("/actualizar-cantidad", { codbar: codbar, cantidad: nuevaCantidad })
            .done(function(response) {
                alert("Cantidad actualizada con √©xito.");
                actualizarTotal();
            })
            .fail(function() {
                alert("Hubo un problema al actualizar la cantidad.");
            });
    });

    // Eliminar art√≠culo del carrito
    $(document).on('click', '.eliminar-btn', function() {
        const codbar = $(this).data('codbar');

        $.post("/eliminar-articulo", { codbar: codbar })
            .done(function(response) {
                alert("Art√≠culo eliminado con √©xito.");
                $("#carrito-icon").click();
            })
            .fail(function() {
                alert("Hubo un problema al eliminar el art√≠culo.");
            });
    });

    // Funci√≥n para recalcular el total de cada zona
    function actualizarTotal() {
        let totalMisiones = 0;
        let totalCorrientes = 0;

        $("#misiones .carrito-details").each(function() {
            const cantidad = $(this).find('.cantidad-input').val();
            const precio = parseFloat($(this).find('.precio').text().replace("Precio: $", ""));
            const itemTotal = precio * cantidad;
            $(this).find('.item-total').text(`$${itemTotal.toFixed(2)}`);
            totalMisiones += itemTotal;
        });

        $("#corrientes .carrito-details").each(function() {
            const cantidad = $(this).find('.cantidad-input').val();
            const precio = parseFloat($(this).find('.precio').text().replace("Precio: $", ""));
            const itemTotal = precio * cantidad;
            $(this).find('.item-total').text(`$${itemTotal.toFixed(2)}`);
            totalCorrientes += itemTotal;
        });

        // Mostrar los totales de cada zona
        $("#misiones").append(`<p class="total">Total Misiones: $${totalMisiones.toFixed(2)}</p>`);
        $("#corrientes").append(`<p class="total">Total Corrientes: $${totalCorrientes.toFixed(2)}</p>`);
    }
     // Abrir el modal de la calculadora
            // Abrir el modal de la calculadora
            $("#calculator-icon").click(function() {
                // Obtener los valores de util y dtofab desde el servidor
                $.get("/obtener-valores", function(data) {
                    $("#util").val(data.util); // Asigna el valor de utilidad al input correcto
                    $("#dtofab").val(data.dtofab); // Asigna el valor de descuento al input correcto
                    $("#calculator-modal").show(); // Mostrar el modal
                }).fail(function() {
                    alert("Error al obtener los valores.");
                });
            });


            // Cerrar el modal de la calculadora
            $(".close-calculator").click(function() {
                $("#calculator-modal").hide();
            });

            // Cerrar el modal si se hace clic fuera de √©l
            $(window).click(function(event) {
                if (event.target == document.getElementById('calculator-modal')) {
                    $("#calculator-modal").hide();
                }
            });

            // Manejar el env√≠o del formulario de la calculadora
            $("#utilidad-form").submit(function(event) {
                event.preventDefault(); // Evitar el env√≠o normal del formulario
                const utilidad = $("#util").val(); // Cambiar a 'util'
                const descuento = $("#dtofab").val(); // Cambiar a 'dtofab'

                $.post("/guardar-valores", { util: utilidad, dtofab: descuento }) // Cambiar nombres aqu√≠
                    .done(function(response) {
                        alert("Valores guardados con √©xito.");
                        $("#calculator-modal").hide(); // Cerrar el modal de la calculadora
                    })
                    .fail(function() {
                        alert("Hubo un problema al guardar los valores.");
                    });
            });

            // Cerrar sesi√≥n
            $("#logout-button").click(function() {
                $.post("/logout", function(response) {
                    alert(response.message);
                    window.location.href = "/"; // Redirigir a la p√°gina de inicio
                });
            });
        });
      // Funci√≥n para buscar art√≠culos
      function buscarArticulos() {
    const searchTerm = document.getElementById('searchInput').value;

    if (!searchTerm) {
        alert('Por favor, ingrese un t√©rmino de b√∫squeda.');
        return;
    }

    // Mostrar el loader antes de realizar la b√∫squeda
    document.getElementById('loader').style.display = 'block';

    fetch('/buscar-articulos', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ searchTerm: searchTerm })
    })
    .then(response => response.json())
    .then(result => {
        const articulosGrid = document.getElementById('articulosGrid');
        articulosGrid.innerHTML = ''; // Limpiar resultados anteriores

        if (result.success) {
            // Crear tabla y encabezados
            const table = document.createElement('table');
            table.className = 'table list-view'; // A√±adir clase para el estilo de la tabla

            // Crear encabezados
            const thead = document.createElement('thead');
            thead.innerHTML = `
                <tr>
                    <th>Imagen</th>
                    <th>C√≥digo de Barra</th>
                    <th>Nombre del Producto</th>
                    <th>Precio</th>
                    <th>Precio de Venta</th>
                    <th>Stock Misiones</th>
                    <th>Stock Corrientes</th>
                    <th>Cantidad</th>
                    <th>Acciones</th>
                </tr>
            `;
            table.appendChild(thead);

            // Crear el cuerpo de la tabla
            const tbody = document.createElement('tbody');

            result.articulos.forEach(articulo => {
                const row = document.createElement('tr');
                row.setAttribute('data-codbar', articulo.codbar);
                row.setAttribute('data-denom', articulo.denom.toLowerCase());

                // Dividir el nombre del producto en dos l√≠neas
                const nombreDividido = articulo.denom.split(' '); // Divide el nombre por espacio
                const nombreFinal = nombreDividido.length > 1 ? `${nombreDividido[0]}<br>${nombreDividido.slice(1).join(' ')}` : articulo.denom;
                
                // Dividir el c√≥digo de barras en dos l√≠neas
                const midIndex = Math.ceil(articulo.codbar.length / 2); // Encuentra el √≠ndice medio
                const codbarDividido = `${articulo.codbar.slice(0, midIndex)}<br>${articulo.codbar.slice(midIndex)}`;

                // Crear la columna de precio con el descuento (si aplica)
                let precioOriginal = articulo.precio;
                let precioConDescuento = precioOriginal;

                // Si hay un porcentaje de oferta, aplicamos el descuento
                if (articulo.porofe && articulo.porofe !== 0) {
                    const descuento = (precioOriginal * Math.abs(articulo.porofe)) / 100;
                    precioConDescuento = precioOriginal - descuento;
                }

                // Generar el contenido de la columna del precio
                let precioHTML = `<span class="precio-texto">$${precioConDescuento.toFixed(2)}</span>`; // Agregamos la clase para ocultar el monto

                if (articulo.porofe && articulo.porofe !== 0) {
                    precioHTML += ` <span class="descuento">(Precio oferta con - ${Math.abs(articulo.porofe)}%, a partir de: ${articulo.canofe} unidades compradas)</span><br>`;
                }

                row.innerHTML = `
                    <td><img class="product-image" src="/images/${articulo.codbar.replace(/\s+/g, '-')}.jpg" alt="${articulo.denom}" onerror="this.onerror=null; this.src='/images/logo.png';" onclick="toggleImageSize(event)"></td>
                    <td>${codbarDividido}</td>
                    <td>${nombreFinal}</td>
                    <td>${precioHTML}</td> <!-- Aqu√≠ se incluye el precio con el descuento -->
                    <td>$${articulo.precio_venta.toFixed(2)}</td>
                    <td>${articulo.stock}</td>
                    <td>${articulo.stkcor}</td>
                    <td>
                        <input type="number" id="cantidad-${articulo.codbar}" class="quantity-input" placeholder="Cantidad" min="1">
                    </td>
                    <td>
                        <div class="button-group">
                            <button class="add-button" onclick="agregarAlCarrito('${articulo.codbar}', 'Misiones', document.getElementById('cantidad-${articulo.codbar}').value)">Agregar Misiones</button>
                            <button class="add-button" onclick="agregarAlCarrito('${articulo.codbar}', 'Corrientes', document.getElementById('cantidad-${articulo.codbar}').value)">Agregar Corrientes</button>
                            <button class="equivalence-button" onclick="verEquivalencias('${articulo.codbar}')">Ver Equivalencia</button>
                        </div>
                    </td>
                `;

                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            articulosGrid.appendChild(table); // A√±adir la tabla al contenedor
        } else {
            alert(result.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Ocurri√≥ un error en la b√∫squeda de art√≠culos.');
    })
    .finally(() => {
        // Ocultar el loader despu√©s de recibir la respuesta
        document.getElementById('loader').style.display = 'none';
    });
}

//*********////
function buscarequi(codbar) {
    if (!codbar) {
        alert('No se encontr√≥ el c√≥digo de barra.');
        return;
    }

    fetch('/buscar-articulos', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ searchTerm: codbar }) // Usar el c√≥digo de barra directamente
    })
    .then(response => response.json())
    .then(result => {
        const articulosGrid = document.getElementById('articulosGrid');
        articulosGrid.innerHTML = ''; // Limpiar resultados anteriores

        if (result.success) {
            // Crear tabla y encabezados
            const table = document.createElement('table');
            table.className = 'table list-view'; // A√±adir clase para el estilo de la tabla

            // Crear encabezados
            const thead = document.createElement('thead');
            thead.innerHTML = `
                <tr>
                    <th>Imagen</th>
                    <th>C√≥digo de Barra</th>
                    <th>Nombre del Producto</th>
                    <th>Precio</th>
                    <th>Precio de Venta</th>
                    <th>Stock Misiones</th>
                    <th>Stock Corrientes</th>
                    <th>Cantidad</th>
                    <th>Acciones</th>
                </tr>
            `;
            table.appendChild(thead);

            // Crear el cuerpo de la tabla
            const tbody = document.createElement('tbody');

            result.articulos.forEach(articulo => {
                const row = document.createElement('tr');
                row.setAttribute('data-codbar', articulo.codbar);
                row.setAttribute('data-denom', articulo.denom.toLowerCase());
                // Dividir el nombre del producto en dos l√≠neas
                const nombreDividido = articulo.denom.split(' '); // Divide el nombre por espacio
                const nombreFinal = nombreDividido.length > 1 ? `${nombreDividido[0]}<br>${nombreDividido.slice(1).join(' ')}` : articulo.denom;
                // Dividir el c√≥digo de barras en dos l√≠neas
                const midIndex = Math.ceil(articulo.codbar.length / 2); // Encuentra el √≠ndice medio
                const codbarDividido = `${articulo.codbar.slice(0, midIndex)}<br>${articulo.codbar.slice(midIndex)}`;

 

                // Crear la columna de precio con el descuento (si aplica)
                let precioOriginal = articulo.precio;
                let precioConDescuento = precioOriginal;

                // Si hay un porcentaje de oferta, aplicamos el descuento
                if (articulo.porofe && articulo.porofe !== 0) {
                    const descuento = (precioOriginal * Math.abs(articulo.porofe)) / 100;
                    precioConDescuento = precioOriginal - descuento;
                }

                // Generar el contenido de la columna del precio
                //let precioHTML = `$${precioConDescuento.toFixed(2)}`;
                let precioHTML = `<span class="precio-texto">$${precioConDescuento.toFixed(2)}</span>`;
                if (articulo.porofe && articulo.porofe !== 0) {
                    precioHTML += ` <span class="descuento">(Precio oferta con - ${Math.abs(articulo.porofe)}%, a partir de: ${articulo.canofe} unidades compradas)</span><br>`;
                }


                row.innerHTML = `
                    <td><img class="product-image" src="/images/${articulo.codbar.replace(/\s+/g, '-')}.jpg" alt="${articulo.denom}" onerror="this.onerror=null; this.src='/images/logo.png';" onclick="toggleImageSize(event)"></td>
                    <td>${codbarDividido}</td>
                     <td>${nombreFinal}</td>
                    <td>${precioHTML}</td> <!-- Aqu√≠ se incluye el precio con el descuento -->
                    <td>$${articulo.precio_venta.toFixed(2)}</td>
                    <td>${articulo.stock}</td>
                    <td>${articulo.stkcor}</td>
                    <td>
                        <input type="number" id="cantidad-${articulo.codbar}" class="quantity-input" placeholder="Cantidad" min="1">
                    </td>
                    <td>
                        <div class="button-group">
                            <button class="add-button" onclick="agregarAlCarrito('${articulo.codbar}', 'Misiones', document.getElementById('cantidad-${articulo.codbar}').value)">Agregar Misiones</button>
                            <button class="add-button" onclick="agregarAlCarrito('${articulo.codbar}', 'Corrientes', document.getElementById('cantidad-${articulo.codbar}').value)">Agregar Corrientes</button>
                            <button class="equivalence-button" onclick="verEquivalencias('${articulo.codbar}')">Ver Equivalencia</button>
                        </div>
                    </td>
                `;


                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            articulosGrid.appendChild(table); // A√±adir la tabla al contenedor
        } else {
            alert(result.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Ocurri√≥ un error en la b√∫squeda de art√≠culos.');
    });
}

///*/////////
function agregarAlCarrito(codbar, zona, cantidad = null) {
    // Obtener la cantidad solo si no se ha pasado desde el modal
    if (!cantidad) {
        cantidad = document.getElementById(`cantidad-${codbar}`).value;
    }

    const zonaId = zona === 'Misiones' ? 1 : 2;

    if (!cantidad || cantidad <= 0) {
        alert('Por favor, ingrese una cantidad v√°lida.');
        return;
    }

    const data = {
        codbar: codbar,
        cantidad: cantidad,
        zona: zonaId
    };

    fetch('/agregar-carrito', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Error en la respuesta de la red');
        }
        return response.json();
    })
    .then(result => {
        alert(result.message);
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Ocurri√≥ un error al agregar al carrito.');
    });
}
//*************************
    $(document).ready(function() {
    // Manejar el clic en el bot√≥n "Ver Equivalencia"
    $('.equivalence-button').click(async function() {
        const codbar = $(this).data('codbar');

        // Hacer la solicitud a la ruta para obtener equivalencias
        const response = await fetch(`/equivalencias/${codbar}`);
        const data = await response.json();

        if (data.success) {
            const equivalenciasHtml = data.equivalencias.map((equivalencia, index) => `
                <div class="equivalencia-item">
                    <div class="equivalencia-column">Equivalencia ${index + 1}: ${equivalencia.equivalencia}</div>
                    <div class="equivalencia-column stock ${equivalencia.stock > 0 ? 'in-stock' : 'no-stock'}">
                        Stock: ${equivalencia.stock !== null ? equivalencia.stock : 'No disponible'}
                    </div>
                    <div class="equivalencia-column">Precio: ${equivalencia.precio !== null ? `$${equivalencia.precio.toFixed(2)}` : 'No disponible'}</div>
                    <div class="equivalencia-column">
                        <button class="mas-info-button" onclick="buscarequi('${equivalencia.equivalencia}')">M√°s Info</button>
                    </div>
                </div>
            `).join('');


                $('#equivalencias-items').html(equivalenciasHtml);
                $('#equivalencias-modal').show(); // Mostrar el modal
        } else {
            alert(data.message);
        }
    });

    // Cerrar el modal de equivalencias
    $('.close-equivalencias').click(function() {
        $('#equivalencias-modal').hide();
    });

    // Cerrar el modal si se hace clic fuera de √©l
    $(window).click(function(event) {
        if (event.target == document.getElementById('equivalencias-modal')) {
            $('#equivalencias-modal').hide();
        }
    });
});
function verEquivalencias(codbar) {
    fetch(`/equivalencias/${codbar}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                const equivalenciasHtml = data.equivalencias.map((equivalencia, index) => `
                    <div class="equivalencia-item">
                        <div class="equivalencia-column">Equivalencia ${index + 1}: ${equivalencia.equivalencia}</div>
                        <div class="equivalencia-column stock ${equivalencia.stock > 0 ? 'in-stock' : 'no-stock'}">
                            Stock: ${equivalencia.stock !== null ? equivalencia.stock : 'No disponible'}
                        </div>
                        <div class="equivalencia-column">Precio: ${equivalencia.precio !== null ? `$${equivalencia.precio.toFixed(2)}` : 'No disponible'}</div>
                        <div class="equivalencia-column">
                            <button class="mas-info-button" onclick="buscarequi('${equivalencia.equivalencia}')">M√°s Info</button>
                        </div>
                    </div>
                `).join('');

                $('#equivalencias-items').html(equivalenciasHtml);
                $('#equivalencias-modal').show(); // Mostrar el modal
            } else {
                alert(data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Ocurri√≥ un error al obtener las equivalencias.');
        });
}



document.getElementById('filtrarProveedorBtn').onclick = function() {
    openModal();
    cargarProveedores();
};

function openModal() {
    document.getElementById('filtrarpro').style.display = 'block';
}

function closeModal() {
    document.getElementById('filtrarpro').style.display = 'none';
}

function cargarProveedores() {
    fetch('/cargar-proveedores') // Cambia esta ruta seg√∫n tu configuraci√≥n
        .then(response => response.json())
        .then(data => {
            const proveedoresGrid = document.getElementById('proveedoresGrid');
            proveedoresGrid.innerHTML = ''; // Limpiar resultados anteriores

            data.proveedores.forEach(proveedor => {
                const proveedorDiv = document.createElement('div');
                proveedorDiv.className = 'proveedor-item'; // Clase para cada proveedor

                proveedorDiv.innerHTML = `
                    <div class="proveedor-imagen-container">
                        <img src="/images/${proveedor.codigo}.jpg" alt="${proveedor.razon}" class="proveedor-imagen" onclick="filtrarPorProveedor('${proveedor.codigo}')">
                    </div>
                    <p>${proveedor.razon}</p>
                `;

                proveedoresGrid.appendChild(proveedorDiv);
            });
        })
        .catch(error => console.error('Error al cargar proveedores:', error));
}

function filtrarPorProveedor(event) {
    const proveedorId = event.target.getAttribute('data-codigo'); // Obtiene el ID del proveedor

    // Muestra el loader
    document.getElementById('loader').style.display = 'block';

    fetch('/filtrar-articulos', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ proveedorId }) // Env√≠a el ID del proveedor al servidor
    })
    .then(response => response.json())
    .then(result => {
        console.log("Datos recibidos:", result); // Verifica los datos recibidos

        const articulosGrid = document.getElementById('articulosGrid');
        articulosGrid.innerHTML = ''; // Limpiar resultados anteriores

        if (result.success) { // Verifica si la respuesta fue exitosa
            const table = document.createElement('table');
            table.className = 'table list-view';

            const thead = document.createElement('thead');
            thead.innerHTML = `
                <tr>
                    <th>Imagen</th>
                    <th>C√≥digo de Barra</th>
                    <th>Nombre del Producto</th>
                    <th>Precio</th>
                    <th>Precio de Venta</th>
                    <th>Stock Misiones</th>
                    <th>Stock Corrientes</th>
                    <th>Cantidad</th>
                    <th>Acciones</th>
                </tr>
            `;
            table.appendChild(thead);

            const tbody = document.createElement('tbody');
            result.articulos.forEach(articulo => {
                const row = document.createElement('tr');
                row.setAttribute('data-codbar', articulo.codbar);
                row.setAttribute('data-denom', articulo.denom.toLowerCase());

                const nombreDividido = articulo.denom.split(' ');
                const nombreFinal = nombreDividido.length > 1 ? `${nombreDividido[0]}<br>${nombreDividido.slice(1).join(' ')}` : articulo.denom;
                const midIndex = Math.ceil(articulo.codbar.length / 2);
                const codbarDividido = `${articulo.codbar.slice(0, midIndex)}<br>${articulo.codbar.slice(midIndex)}`;

                let precioHTML = `$${articulo.precio.toFixed(2)}`;
                if (articulo.porofe && articulo.porofe !== 0) {
                    const descuento = (articulo.precio * Math.abs(articulo.porofe)) / 100;
                    const precioConDescuento = articulo.precio - descuento;
                    precioHTML = `$${precioConDescuento.toFixed(2)} <span class="descuento">(Precio oferta con -${Math.abs(articulo.porofe)}%)</span>`;
                }
                
                row.innerHTML = `
                    <td><img class="product-image" src="/images/${articulo.codbar.replace(/\s+/g, '-')}.jpg" alt="${articulo.denom}" onerror="this.onerror=null; this.src='/images/logo.png';" onclick="toggleImageSize(event)"></td>
                    <td>${codbarDividido}</td>
                    <td>${nombreFinal}</td>
                    <td><span class="precio-texto">${precioHTML}</span></td>
                    <td>$${articulo.precio_venta.toFixed(2)}</td>
                    <td>${articulo.stock}</td>
                    <td>${articulo.stkcor}</td>
                    <td>
                        <input type="number" id="cantidad-${articulo.codbar}" class="quantity-input" placeholder="Cantidad" min="1">
                    </td>
                    <td>
                        <div class="button-group">
                            <button class="add-button" onclick="agregarAlCarrito('${articulo.codbar}', 'Misiones', document.getElementById('cantidad-${articulo.codbar}').value)">Agregar Misiones</button>
                            <button class="add-button" onclick="agregarAlCarrito('${articulo.codbar}', 'Corrientes', document.getElementById('cantidad-${articulo.codbar}').value)">Agregar Corrientes</button>
                            <button class="equivalence-button" onclick="verEquivalencias('${articulo.codbar}')">Ver Equivalencia</button>
                        </div>
                    </td>
                `;

                tbody.appendChild(row);
            });

            table.appendChild(tbody);
            articulosGrid.appendChild(table);

            // Llamamos a la funci√≥n togglePrecio cada vez que se actualiza la tabla
            togglePrecio();
        } else {
            articulosGrid.innerHTML = '<p>No se encontraron art√≠culos para este proveedor.</p>';
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Error al filtrar los art√≠culos.');
    })
    .finally(() => {
        // Oculta el loader independientemente del resultado
        document.getElementById('loader').style.display = 'none';
    });
}
    </script>
    
</body>
</html>