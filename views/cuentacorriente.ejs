<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cuenta Corriente</title>
    <link rel="stylesheet" href="/css/cuentacorriente.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha512-KyZXEAg3QhqLMpG8r+Knujsl5+3Z5rF/6ylcCZbFpcE3g3zBAs6Dd0eYY6F1+V2MjhLS9+0h03QO99g0j3QyXw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script>
        let currentPage = 0; // Páginas cargadas
        const limit = 15; // Cantidad de registros por página

        function loadMore() {
            currentPage += limit; // Aumentamos la página en 15
            fetch(`/cuentacorriente?page=${currentPage}`)
                .then(response => response.text())
                .then(data => {
                    // Insertamos los nuevos registros en la tabla
                    const parser = new DOMParser();
                    const doc = parser.parseFromString(data, 'text/html');
                    const newRows = doc.querySelectorAll('.movements-table tbody tr');
                    const tableBody = document.querySelector('.movements-table tbody');

                    if (newRows.length > 0) {
                        newRows.forEach(row => {
                            tableBody.appendChild(row); // Añadir nuevas filas a la tabla
                        });
                    }

                    // Comprobar si hay más registros para mostrar
                    if (newRows.length < limit) {
                        document.getElementById('load-more-button').style.display = 'none'; // Ocultar botón si no hay más registros
                    }
                })
                .catch(error => console.error('Error al cargar más registros:', error));
        }

        function downloadPDF(numero, codcli) {
            const url = `/download-pdf?numero=${numero}&codcli=${codcli}`;

            // Realiza una solicitud GET al servidor para descargar el archivo
            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Error al descargar el archivo');
                    }
                    return response.blob(); // Obtener el archivo en formato blob
                })
                .then(blob => {
                    // Crear un enlace para descargar el archivo
                    const downloadUrl = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = downloadUrl;
                    a.download = `FACT-${numero.toString().padStart(9, '0')} ${codcli.toString().padStart(3, '0')}.pdf`;
                    document.body.appendChild(a);
                    a.click(); // Forzar la descarga
                    a.remove(); // Eliminar el enlace después de la descarga
                })
                .catch(error => {
                    console.error('Error al intentar descargar el archivo:', error);
                    alert('Ocurrió un error al intentar descargar el archivo');
                });
        }



    </script>
</head>

<body>
    <header class="main-header">
        <div class="logo">
            <a href="/inicio"> <!-- Enlace que redirige a la página inicio.ejs -->
                <img src="/images/logo.png" alt="Logo de la Empresa" class="logo">
            </a>
        </div>
        <div class="welcome-message">
            <p>Bienvenido, <%= razon %></p>
        </div>
    </header>

    <main class="main-content">
        <h1>Cuenta Corriente</h1>
        <p>Aquí puedes visualizar los movimientos de tu cuenta corriente.</p>

        <!-- Tabla de movimientos -->
        <table class="movements-table">
            <thead>
                <tr>
                    <th>Número</th>
                    <th>Fecha</th>
                    <th>Código de Movimiento</th>
                    <th>Importe</th>
                    <th>Observaciones</th>
                    <th>Cancelado</th>
                    <th>Rubro</th>
                    <th>PDF</th> <!-- Nueva columna para el botón PDF -->
                </tr>
            </thead>
            <tbody>
                <% if (movimientos.length > 0) { %>
                    <% movimientos.forEach(mov => { %>
                    <tr>
                        <td><%= mov.numero %></td>
                        <td><%= mov.fecha.toISOString().split('T')[0] %></td>
                        <td><%= mov.codmov %></td>
                        <td>$<%= mov.importe.toFixed(2) %></td>
                        <td><%= mov.observ %></td>
                        <td><%= mov.cancelado === 1 ? 'Sí' : 'No' %></td>
                        <td><%= mov.rubro %></td>
                        <td>
                            <button onclick="downloadPDF('<%= mov.numero %>', '<%= mov.codcli %>')">PDF</button>
                        </td> <!-- Botón PDF -->
                    </tr>
                    <% }) %>
                <% } else { %>
                    <tr>
                        <td colspan="8">No hay movimientos disponibles</td> <!-- Actualizado el colspan -->
                    </tr>
                <% } %>
            </tbody>
        </table>

        <!-- Botón de carga -->
        <div class="pagination">
            <button id="load-more-button" class="pagination-button" onclick="loadMore()">Cargar más</button>
        </div>
    </main>
</body>

</html>
